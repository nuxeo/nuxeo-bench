name: nuxeo-bench
refreshConfig:
    enabled: false
    interval: 60000
timeConfig:
    relativeStartQuantity: '2'
    relativeStartUnits: hours
    relativeUntilQuantity: ''
    relativeUntilUnits: now
    type: relative
defaultGraphParams:
    from: -2hours
    height: 400
    until: now
    width: 500
graphSize:
    height: 400
    width: 500
graphs:
-
    -   -
    -   colorList: darkgray,red,blue,green
        lineMode: connected
        target:
        - alias(secondYAxis(sumSeries(servers.es*.loadavg.processes_running)),"process
            running")
        - aliasByNode(servers.es*.loadavg.01,1)
        title: ES sys/Load 1min
-
    -   -
    -   colorList: darkgray,red,blue,green
        lineMode: connected
        target:
        - alias(secondYAxis(sumSeries(servers.nuxeo*.loadavg.processes_running)),"process
            running")
        - aliasByNode(servers.nuxeo*.loadavg.01,1)
        title: Nuxeos sys/Load
-
    -   -
    -   colorList: darkgray,red,orange,yellow
        lineMode: connected
        target:
        - alias(secondYAxis(servers.mypgsql.loadavg.processes_running),"process running")
        - alias(servers.mypgsql.loadavg.01,"1min")
        title: DB sys/Load
-
    -   -
    -   lineMode: connected
        target:
        - aliasByNode(servers.*.cpu.total.user,1)
        title: sys/CPU users
        vtitle: CPU
-
    -   -
    -   lineMode: connected
        target:
        - aliasByNode(servers.*.cpu.total.system,1)
        title: sys/CPU system
        vtitle: CPU
-
    -   -
    -   lineMode: connected
        target:
        - aliasByNode(servers.*.cpu.total.iowait,1)
        title: sys/CPU iowait
        vtitle: CPU
-
    -   - aliasByNode(servers.*.cpu.total.idle,1)
    -   lineMode: connected
        target:
        - aliasByNode(servers.*.cpu.total.idle,1)
        title: sys/CPU idle
        vtitle: CPU
    - /render?from=-2hours&until=now&width=400&height=250&lineMode=connected&target=aliasByNode(servers.*.cpu.total.idle%2C1)&title=sys%2FCPU%20idle&vtitle=CPU
-
    -   - aliasByNode(servers.*.iostat.xvdf.util_percentage,1)
    -   lineMode: connected
        target:
        - aliasByNode(servers.*.iostat.xvdf.util_percentage,1)
        title: sys/Disk xvdf usage
        vtitle: percent
    - /render?from=-2hours&until=now&width=400&height=250&lineMode=connected&target=aliasByNode(servers.*.iostat.xvdf.util_percentage%2C1)&title=sys%2FDisk%20xvdf%20usage&vtitle=percent
-
    -   - aliasByNode(servers.*.iostat.xvda.util_percentage,1)
    -   lineMode: connected
        target:
        - aliasByNode(servers.*.iostat.xvda.util_percentage,1)
        title: sys/Disk xvda usage
        vtitle: percent
    - /render?from=-2hours&until=now&width=400&height=250&lineMode=connected&target=aliasByNode(servers.*.iostat.xvda.util_percentage%2C1)&title=sys%2FDisk%20xvda%20usage&vtitle=percent
-
    -   - alias(secondYAxis(servers.mypgsql.memory.SwapCached),"swap")
        - alias(secondYAxis(servers.mypgsql.memory.Dirty),"dirty")
        - alias(asPercent(servers.mypgsql.memory.Buffers,servers.mypgsql.memory.MemTotal),"buffers")
        - alias(asPercent(servers.mypgsql.memory.Cached,servers.mypgsql.memory.MemTotal),"cached")
        - alias(asPercent(servers.mypgsql.memory.MemFree,servers.mypgsql.memory.MemTotal),"free")
    -   colorList: red,orange,blue,darkblue,green
        lineMode: connected
        target:
        - alias(secondYAxis(servers.mypgsql.memory.SwapCached),"swap")
        - alias(secondYAxis(servers.mypgsql.memory.Dirty),"dirty")
        - alias(asPercent(servers.mypgsql.memory.Buffers,servers.mypgsql.memory.MemTotal),"buffers")
        - alias(asPercent(servers.mypgsql.memory.Cached,servers.mypgsql.memory.MemTotal),"cached")
        - alias(asPercent(servers.mypgsql.memory.MemFree,servers.mypgsql.memory.MemTotal),"free")
        title: sys/Memory DB
        vtitle: percent
    - /render?from=-2hours&until=now&width=400&height=250&lineMode=connected&target=alias(secondYAxis(servers.mypgsql.memory.SwapCached)%2C%22swap%22)&target=alias(secondYAxis(servers.mypgsql.memory.Dirty)%2C%22dirty%22)&target=alias(asPercent(servers.mypgsql.memory.Buffers%2Cservers.mypgsql.memory.MemTotal)%2C%22buffers%22)&target=alias(asPercent(servers.mypgsql.memory.Cached%2Cservers.mypgsql.memory.MemTotal)%2C%22cached%22)&target=alias(asPercent(servers.mypgsql.memory.MemFree%2Cservers.mypgsql.memory.MemTotal)%2C%22free%22)&title=sys%2FMemory%20DB&vtitle=percent&colorList=red%2Corange%2Cblue%2Cdarkblue%2Cgreen
-
    -   - alias(servers.*.elasticsearch.process.cpu.percent,"%CPU")
        - alias(secondYAxis(servers.*.elasticsearch.indices._all.datastore.size),"index
            size")
    -   colorList: red,blue
        target:
        - alias(servers.*.elasticsearch.process.cpu.percent,"%CPU")
        - alias(secondYAxis(servers.*.elasticsearch.indices._all.datastore.size),"index
            size")
        title: es/Elasticsearch CPU and size
        vtitle: percent
        yMaxLeft: '100'
        yMinLeft: '0'
    - /render?from=-2hours&until=now&width=400&height=250&target=alias(servers.*.elasticsearch.process.cpu.percent%2C%22%25CPU%22)&target=alias(secondYAxis(servers.*.elasticsearch.indices._all.datastore.size)%2C%22index%20size%22)&yMaxLeft=100&title=es%2FElasticsearch%20CPU%20and%20size&yMinLeft=0&vtitle=percent&colorList=red%2Cblue
-
    -   - alias(servers.*.elasticsearch.indices._all.docs.count,"total documents")
        - alias(secondYAxis(servers.*.elasticsearch.indices._all.docs.deleted),"deleted
            documents")
    -   colorList: blue,orange
        target:
        - alias(servers.*.elasticsearch.indices._all.docs.count,"total documents")
        - alias(secondYAxis(servers.*.elasticsearch.indices._all.docs.deleted),"deleted
            documents")
        title: es/Elasticsearch docs
    - /render?from=-2hours&until=now&width=400&height=250&colorList=blue%2Corange&title=es%2FElasticsearch%20docs&target=alias(servers.*.elasticsearch.indices._all.docs.count%2C%22total%20documents%22)&target=alias(secondYAxis(servers.*.elasticsearch.indices._all.docs.deleted)%2C%22deleted%20documents%22)
-
    -   - alias(scaleToSeconds(nonNegativeDerivative(servers.*.postgres.database.*.tup_deleted),1),"tup_deleted")
        - alias(scaleToSeconds(nonNegativeDerivative(servers.*.postgres.database.*.tup_inserted),1),"tup_inserted")
        - alias(scaleToSeconds(nonNegativeDerivative(servers.*.postgres.database.*.tup_updated),1),"tup_updated")
        - alias(scaleToSeconds(nonNegativeDerivative(servers.*.postgres.database.*.xact_commit),1),"xact_commit")
        - alias(secondYAxis(servers.*.postgres.database.*.connections),"connections")
    -   colorList: red,orange,yellow,blue,green
        target:
        - alias(scaleToSeconds(nonNegativeDerivative(servers.*.postgres.database.*.tup_deleted),1),"tup_deleted")
        - alias(scaleToSeconds(nonNegativeDerivative(servers.*.postgres.database.*.tup_inserted),1),"tup_inserted")
        - alias(scaleToSeconds(nonNegativeDerivative(servers.*.postgres.database.*.tup_updated),1),"tup_updated")
        - alias(scaleToSeconds(nonNegativeDerivative(servers.*.postgres.database.*.xact_commit),1),"xact_commit")
        - alias(secondYAxis(servers.*.postgres.database.*.connections),"connections")
        title: db/Postgres
        yMinRight: '0'
    - /render?from=-2hours&until=now&width=400&height=250&target=alias(scaleToSeconds(nonNegativeDerivative(servers.*.postgres.database.*.tup_deleted)%2C1)%2C%22tup_deleted%22)&target=alias(scaleToSeconds(nonNegativeDerivative(servers.*.postgres.database.*.tup_inserted)%2C1)%2C%22tup_inserted%22)&target=alias(scaleToSeconds(nonNegativeDerivative(servers.*.postgres.database.*.tup_updated)%2C1)%2C%22tup_updated%22)&target=alias(scaleToSeconds(nonNegativeDerivative(servers.*.postgres.database.*.xact_commit)%2C1)%2C%22xact_commit%22)&target=alias(secondYAxis(servers.*.postgres.database.*.connections)%2C%22connections%22)&yMinRight=0&title=db%2FPostgres&colorList=red%2Corange%2Cyellow%2Cblue%2Cgreen
-
    -   - alias(secondYAxis(servers.*.nuxeo.jvm.files),"fd_usage")
        - alias(servers.*.nuxeo.jvm.threads.count,"thread_count")
        - alias(servers.*.nuxeo.jvm.threads.daemon.count,"daemond")
    -   colorList: darkgray,blue,green
        target:
        - alias(secondYAxis(servers.*.nuxeo.jvm.files),"fd_usage")
        - alias(servers.*.nuxeo.jvm.threads.count,"thread_count")
        - alias(servers.*.nuxeo.jvm.threads.daemon.count,"daemond")
        title: jvm/Threads
    - /render?from=-2hours&until=now&width=400&height=250&colorList=darkgray%2Cblue%2Cgreen&title=jvm%2FThreads&target=alias(secondYAxis(servers.*.nuxeo.jvm.files)%2C%22fd_usage%22)&target=alias(servers.*.nuxeo.jvm.threads.count%2C%22thread_count%22)&target=alias(servers.*.nuxeo.jvm.threads.daemon.count%2C%22daemond%22)
-
    -   - alias(servers.*.nuxeo.jvm.threads.runnable.count,"runnable")
        - alias(servers.*.nuxeo.jvm.threads.new.count,"new")
        - alias(servers.*.nuxeo.jvm.threads.blocked.count,"blocked")
        - alias(servers.*.nuxeo.jvm.threads.waiting.count,"waiting")
        - alias(servers.*.nuxeo.jvm.threads.timed_waiting.count,"timed_waiting")
        - alias(servers.*.nuxeo.jvm.threads.terminated.count,"terminated")
    -   areaMode: stacked
        colorList: green,blue,red,orange,yellow,purple
        target:
        - alias(servers.*.nuxeo.jvm.threads.runnable.count,"runnable")
        - alias(servers.*.nuxeo.jvm.threads.new.count,"new")
        - alias(servers.*.nuxeo.jvm.threads.blocked.count,"blocked")
        - alias(servers.*.nuxeo.jvm.threads.waiting.count,"waiting")
        - alias(servers.*.nuxeo.jvm.threads.timed_waiting.count,"timed_waiting")
        - alias(servers.*.nuxeo.jvm.threads.terminated.count,"terminated")
        title: jvm/Thread state
    - /render?from=-2hours&until=now&width=400&height=250&target=alias(servers.*.nuxeo.jvm.threads.runnable.count%2C%22runnable%22)&target=alias(servers.*.nuxeo.jvm.threads.new.count%2C%22new%22)&target=alias(servers.*.nuxeo.jvm.threads.blocked.count%2C%22blocked%22)&target=alias(servers.*.nuxeo.jvm.threads.waiting.count%2C%22waiting%22)&target=alias(servers.*.nuxeo.jvm.threads.timed_waiting.count%2C%22timed_waiting%22)&target=alias(servers.*.nuxeo.jvm.threads.terminated.count%2C%22terminated%22)&title=jvm%2FThread%20state&areaMode=stacked&colorList=green%2Cblue%2Cred%2Corange%2Cyellow%2Cpurple
-
    -   - alias(asPercent(servers.*.nuxeo.jvm.memory.heap.usage,1),"heap usage")
        - alias(asPercent(servers.*.nuxeo.jvm.memory.non-heap.usage,1),"non heap usage")
    -   target:
        - alias(asPercent(servers.*.nuxeo.jvm.memory.heap.usage,1),"heap usage")
        - alias(asPercent(servers.*.nuxeo.jvm.memory.non-heap.usage,1),"non heap usage")
        title: jvm/Heap
        vtitle: percent
    - /render?from=-2hours&until=now&width=400&height=250&vtitle=percent&title=jvm%2FHeap&target=alias(asPercent(servers.*.nuxeo.jvm.memory.heap.usage%2C1)%2C%22heap%20usage%22)&target=alias(asPercent(servers.*.nuxeo.jvm.memory.non-heap.usage%2C1)%2C%22non%20heap%20usage%22)
-
    -   - alias(asPercent(scaleToSeconds(nonNegativeDerivative(servers.*.nuxeo.jvm.garbage.PS-Scavenge.time),1),1000),"minor
            GC")
        - alias(asPercent(scaleToSeconds(nonNegativeDerivative(servers.*.nuxeo.jvm.garbage.PS-MarkSweep.time),1),1000),"major
            GC")
    -   areaMode: first
        colorList: orange,red
        lineMode: staircase
        target:
        - alias(asPercent(scaleToSeconds(nonNegativeDerivative(servers.*.nuxeo.jvm.garbage.PS-Scavenge.time),1),1000),"minor
            GC")
        - alias(asPercent(scaleToSeconds(nonNegativeDerivative(servers.*.nuxeo.jvm.garbage.PS-MarkSweep.time),1),1000),"major
            GC")
        title: jvm/GC
        vtitle: percent
    - /render?from=-2hours&until=now&width=400&height=250&lineMode=staircase&target=alias(asPercent(scaleToSeconds(nonNegativeDerivative(servers.*.nuxeo.jvm.garbage.PS-Scavenge.time)%2C1)%2C1000)%2C%22minor%20GC%22)&target=alias(asPercent(scaleToSeconds(nonNegativeDerivative(servers.*.nuxeo.jvm.garbage.PS-MarkSweep.time)%2C1)%2C1000)%2C%22major%20GC%22)&title=jvm%2FGC&areaMode=first&vtitle=percent&colorList=orange%2Cred
-
    -   - alias(servers.*.nuxeo.tomcat.processingTime,"processingTime")
        - alias(secondYAxis(servers.*.nuxeo.tomcat.errorCount),"requests in error")
    -   colorList: green,red,yellow
        target:
        - alias(servers.*.nuxeo.tomcat.processingTime,"processingTime")
        - alias(secondYAxis(servers.*.nuxeo.tomcat.errorCount),"requests in error")
        title: tcat/Processing time and errors
    - /render?from=-2hours&until=now&width=400&height=250&colorList=green%2Cred%2Cyellow&title=tcat%2FProcessing%20time%20and%20errors&target=alias(servers.*.nuxeo.tomcat.processingTime%2C%22processingTime%22)&target=alias(secondYAxis(servers.*.nuxeo.tomcat.errorCount)%2C%22requests%20in%20error%22)
-
    -   - alias(servers.*.nuxeo.tomcat.currentThreadBusy,"threads busy")
        - alias(servers.*.nuxeo.tomcat.currentThreadCount,"threads")
        - alias(scaleToSeconds(nonNegativeDerivative(servers.*.nuxeo.tomcat.requestCount),1),"requests/s")
        - alias(secondYAxis(servers.*.nuxeo.tomcat.activeSessions),"activeSessions")
    -   target:
        - alias(servers.*.nuxeo.tomcat.currentThreadBusy,"threads busy")
        - alias(servers.*.nuxeo.tomcat.currentThreadCount,"threads")
        - alias(scaleToSeconds(nonNegativeDerivative(servers.*.nuxeo.tomcat.requestCount),1),"requests/s")
        - alias(secondYAxis(servers.*.nuxeo.tomcat.activeSessions),"activeSessions")
        title: tcat/Throughtput Threads and sessions
    - /render?from=-2hours&until=now&width=400&height=250&title=tcat%2FThroughtput%20Threads%20and%20sessions&target=alias(servers.*.nuxeo.tomcat.currentThreadBusy%2C%22threads%20busy%22)&target=alias(servers.*.nuxeo.tomcat.currentThreadCount%2C%22threads%22)&target=alias(scaleToSeconds(nonNegativeDerivative(servers.*.nuxeo.tomcat.requestCount)%2C1)%2C%22requests%2Fs%22)&target=alias(secondYAxis(servers.*.nuxeo.tomcat.activeSessions)%2C%22activeSessions%22)
-
    -   - alias(sumSeries(servers.*.nuxeo.nuxeo.repositories.jdbc.*.connections.count),"total
            connection")
        - alias(diffSeries(sumSeries(servers.*.nuxeo.nuxeo.repositories.jdbc.*.connections.count),sumSeries(servers.*.nuxeo.nuxeo.repositories.jdbc.*.connections.idle)),"active")
    -   target:
        - alias(sumSeries(servers.*.nuxeo.nuxeo.repositories.jdbc.*.connections.count),"total
            connection")
        - alias(diffSeries(sumSeries(servers.*.nuxeo.nuxeo.repositories.jdbc.*.connections.count),sumSeries(servers.*.nuxeo.nuxeo.repositories.jdbc.*.connections.idle)),"active")
        title: nx/Repositories JDBC connections pool
    - /render?from=-2hours&until=now&width=400&height=250&title=nx%2FRepositories%20JDBC%20connections%20pool&target=alias(sumSeries(servers.*.nuxeo.nuxeo.repositories.jdbc.*.connections.count)%2C%22total%20connection%22)&target=alias(diffSeries(sumSeries(servers.*.nuxeo.nuxeo.repositories.jdbc.*.connections.count)%2CsumSeries(servers.*.nuxeo.nuxeo.repositories.jdbc.*.connections.idle))%2C%22active%22)
-
    -   - alias(sumSeries(servers.*.nuxeo.nuxeo.repositories.sessions),"sessions")
        - alias(sumSeries(servers.*.nuxeo.nuxeo.repositories.repository.*.connections.count),"total
            connections")
        - alias(diffSeries(sumSeries(servers.*.nuxeo.nuxeo.repositories.repository.*.connections.count),sumSeries(servers.*.nuxeo.nuxeo.repositories.repository.*.connections.idle)),"active")
    -   target:
        - alias(sumSeries(servers.*.nuxeo.nuxeo.repositories.sessions),"sessions")
        - alias(sumSeries(servers.*.nuxeo.nuxeo.repositories.repository.*.connections.count),"total
            connections")
        - alias(diffSeries(sumSeries(servers.*.nuxeo.nuxeo.repositories.repository.*.connections.count),sumSeries(servers.*.nuxeo.nuxeo.repositories.repository.*.connections.idle)),"active")
        title: nx/Repositories sessions
    - /render?from=-2hours&until=now&width=400&height=250&title=nx%2FRepositories%20sessions&target=alias(sumSeries(servers.*.nuxeo.nuxeo.repositories.sessions)%2C%22sessions%22)&target=alias(sumSeries(servers.*.nuxeo.nuxeo.repositories.repository.*.connections.count)%2C%22total%20connections%22)&target=alias(diffSeries(sumSeries(servers.*.nuxeo.nuxeo.repositories.repository.*.connections.count)%2CsumSeries(servers.*.nuxeo.nuxeo.repositories.repository.*.connections.idle))%2C%22active%22)
-
    -   - aliasByNode(servers.*.nuxeo.nuxeo.directories.*.sessions.max.count,5)
    -   target:
        - aliasByNode(servers.*.nuxeo.nuxeo.directories.*.sessions.max.count,5)
        title: nx/Directories max sessions per directory
    - /render?from=-2hours&until=now&width=400&height=250&title=nx%2FDirectories%20max%20sessions%20per%20directory&target=aliasByNode(servers.*.nuxeo.nuxeo.directories.*.sessions.max.count%2C5)
-
    -   - alias(sumSeries(servers.*.nuxeo.nuxeo.directories.*.sessions.active.count),"total
            active sessions")
        - alias(secondYAxis(sumSeries(servers.*.nuxeo.nuxeo.directories.*.cache.size.count)),"cache
            size"),
        - alias(secondYAxis(sumSeries(servers.*.nuxeo.nuxeo.directories.*.cache.max.count)),"max
            cache size")
    -   target:
        - alias(sumSeries(servers.*.nuxeo.nuxeo.directories.*.sessions.active.count),"total
            active sessions")
        - alias(secondYAxis(sumSeries(servers.*.nuxeo.nuxeo.directories.*.cache.size.count)),"cache
            size"),
        - alias(secondYAxis(sumSeries(servers.*.nuxeo.nuxeo.directories.*.cache.max.count)),"max
            cache size")
        title: nx/Directories sessions and cache size
    - /render?from=-2hours&until=now&width=400&height=250&title=nx%2FDirectories%20sessions%20and%20cache%20size&target=alias(sumSeries(servers.*.nuxeo.nuxeo.directories.*.sessions.active.count)%2C%22total%20active%20sessions%22)&target=alias(secondYAxis(sumSeries(servers.*.nuxeo.nuxeo.directories.*.cache.size.count))%2C%22cache%20size%22)%2C&target=alias(secondYAxis(sumSeries(servers.*.nuxeo.nuxeo.directories.*.cache.max.count))%2C%22max%20cache%20size%22)
-
    -   - alias(servers.*.nuxeo.nuxeo.web.authentication.requests.count.m1_rate,"1minRate")
        - alias(secondYAxis(servers.*.nuxeo.nuxeo.web.authentication.requests.count.mean),"mean")
        - alias(secondYAxis(servers.*.nuxeo.nuxeo.web.authentication.requests.count.p95),"95perc")
    -   colorList: blue,orange,red
        target:
        - alias(servers.*.nuxeo.nuxeo.web.authentication.requests.count.m1_rate,"1minRate")
        - alias(secondYAxis(servers.*.nuxeo.nuxeo.web.authentication.requests.count.mean),"mean")
        - alias(secondYAxis(servers.*.nuxeo.nuxeo.web.authentication.requests.count.p95),"95perc")
        title: nx/Requests
        vtitle: Req/s
    - /render?from=-2hours&until=now&width=400&height=250&target=alias(servers.*.nuxeo.nuxeo.web.authentication.requests.count.m1_rate%2C%221minRate%22)&target=alias(secondYAxis(servers.*.nuxeo.nuxeo.web.authentication.requests.count.mean)%2C%22mean%22)&target=alias(secondYAxis(servers.*.nuxeo.nuxeo.web.authentication.requests.count.p95)%2C%2295perc%22)&title=nx%2FRequests&vtitle=Req%2Fs&colorList=blue%2Corange%2Cred
-
    -   - alias(servers.*.nuxeo.nuxeo.web.authentication.logged-users.count,"logged")
        - alias(secondYAxis(servers.*.nuxeo.nuxeo.web.authentication.requests.concurrent.count.count),"concurrent
            request")
        - alias(secondYAxis(servers.*.nuxeo.nuxeo.web.authentication.requests.concurrent.max.count),"max
            concurrent")
    -   target:
        - alias(servers.*.nuxeo.nuxeo.web.authentication.logged-users.count,"logged")
        - alias(secondYAxis(servers.*.nuxeo.nuxeo.web.authentication.requests.concurrent.count.count),"concurrent
            request")
        - alias(secondYAxis(servers.*.nuxeo.nuxeo.web.authentication.requests.concurrent.max.count),"max
            concurrent")
        title: nx/Requests and logged
    - /render?from=-2hours&until=now&width=400&height=250&title=nx%2FRequests%20and%20logged&target=alias(servers.*.nuxeo.nuxeo.web.authentication.logged-users.count%2C%22logged%22)&target=alias(secondYAxis(servers.*.nuxeo.nuxeo.web.authentication.requests.concurrent.count.count)%2C%22concurrent%20request%22)&target=alias(secondYAxis(servers.*.nuxeo.nuxeo.web.authentication.requests.concurrent.max.count)%2C%22max%20concurrent%22)
-
    -   - alias(servers.*.nuxeo.nuxeo.transactions.duration.m1_rate,"1minRate")
        - alias(secondYAxis(servers.*.nuxeo.nuxeo.transactions.duration.mean),"mean")
        - alias(secondYAxis(servers.*.nuxeo.nuxeo.transactions.duration.p99),"99perc")
    -   colorList: blue,orange,red
        target:
        - alias(servers.*.nuxeo.nuxeo.transactions.duration.m1_rate,"1minRate")
        - alias(secondYAxis(servers.*.nuxeo.nuxeo.transactions.duration.mean),"mean")
        - alias(secondYAxis(servers.*.nuxeo.nuxeo.transactions.duration.p99),"99perc")
        title: nx/Transactions
        vtitle: Tx/s
    - /render?from=-2hours&until=now&width=400&height=250&target=alias(servers.*.nuxeo.nuxeo.transactions.duration.m1_rate%2C%221minRate%22)&target=alias(secondYAxis(servers.*.nuxeo.nuxeo.transactions.duration.mean)%2C%22mean%22)&target=alias(secondYAxis(servers.*.nuxeo.nuxeo.transactions.duration.p99)%2C%2299perc%22)&title=nx%2FTransactions&vtitle=Tx%2Fs&colorList=blue%2Corange%2Cred
-
    -   - alias(drawAsInfinite(derivative(servers.*.nuxeo.nuxeo.transactions.rollbacks.count)),"rollback")
        - alias(servers.*.nuxeo.nuxeo.transactions.concurrents.count.count,"concurrent
            tx")
        - alias(servers.*.nuxeo.nuxeo.transactions.concurrents.max.count,"max concurrent
            tx")
    -   colorList: red,blue,orange
        target:
        - alias(drawAsInfinite(derivative(servers.*.nuxeo.nuxeo.transactions.rollbacks.count)),"rollback")
        - alias(servers.*.nuxeo.nuxeo.transactions.concurrents.count.count,"concurrent
            tx")
        - alias(servers.*.nuxeo.nuxeo.transactions.concurrents.max.count,"max concurrent
            tx")
        title: nx/Transactions rollback
    - /render?from=-2hours&until=now&width=400&height=250&colorList=red%2Cblue%2Corange&title=nx%2FTransactions%20rollback&target=alias(drawAsInfinite(derivative(servers.*.nuxeo.nuxeo.transactions.rollbacks.count))%2C%22rollback%22)&target=alias(servers.*.nuxeo.nuxeo.transactions.concurrents.count.count%2C%22concurrent%20tx%22)&target=alias(servers.*.nuxeo.nuxeo.transactions.concurrents.max.count%2C%22max%20concurrent%20tx%22)
-
    -   - alias(scaleToSeconds(nonNegativeDerivative(servers.*.nuxeo.org.apache.log4j.Appender.warn.count),1),"warnings")
        - alias(scaleToSeconds(nonNegativeDerivative(servers.*.nuxeo.org.apache.log4j.Appender.error.count),1),"errors")
        - alias(drawAsInfinite(absolute(derivative(transformNull(servers.*.nuxeo.nuxeo.instance-up.count,0)))),"start
            or stop")
    -   colorList: orange,red,green
        target:
        - alias(scaleToSeconds(nonNegativeDerivative(servers.*.nuxeo.org.apache.log4j.Appender.warn.count),1),"warnings")
        - alias(scaleToSeconds(nonNegativeDerivative(servers.*.nuxeo.org.apache.log4j.Appender.error.count),1),"errors")
        - alias(drawAsInfinite(absolute(derivative(transformNull(servers.*.nuxeo.nuxeo.instance-up.count,0)))),"start
            or stop")
        title: nx/Up and log
        vtitle: log per second
    - /render?from=-2hours&until=now&width=400&height=250&target=alias(scaleToSeconds(nonNegativeDerivative(servers.*.nuxeo.org.apache.log4j.Appender.warn.count)%2C1)%2C%22warnings%22)&target=alias(scaleToSeconds(nonNegativeDerivative(servers.*.nuxeo.org.apache.log4j.Appender.error.count)%2C1)%2C%22errors%22)&target=alias(drawAsInfinite(absolute(derivative(transformNull(servers.*.nuxeo.nuxeo.instance-up.count%2C0))))%2C%22start%20or%20stop%22)&title=nx%2FUp%20and%20log&vtitle=log%20per%20second&colorList=orange%2Cred%2Cgreen
-
    -   - alias(scaleToSeconds(nonNegativeDerivative(servers.*.nuxeo.nuxeo.repositories.*.documents.create.count),1),"created")
        - alias(scaleToSeconds(nonNegativeDerivative(servers.*.nuxeo.nuxeo.repositories.*.documents.update.count),1),"updated")
        - alias(scaleToSeconds(nonNegativeDerivative(servers.*.nuxeo.nuxeo.repositories.*.documents.delete.count),1),"deleted")
    -   areaMode: stacked
        target:
        - alias(scaleToSeconds(nonNegativeDerivative(servers.*.nuxeo.nuxeo.repositories.*.documents.create.count),1),"created")
        - alias(scaleToSeconds(nonNegativeDerivative(servers.*.nuxeo.nuxeo.repositories.*.documents.update.count),1),"updated")
        - alias(scaleToSeconds(nonNegativeDerivative(servers.*.nuxeo.nuxeo.repositories.*.documents.delete.count),1),"deleted")
        title: nx/Documents
        vtitle: per second
    - /render?from=-2hours&until=now&width=400&height=250&target=alias(scaleToSeconds(nonNegativeDerivative(servers.*.nuxeo.nuxeo.repositories.*.documents.create.count)%2C1)%2C%22created%22)&target=alias(scaleToSeconds(nonNegativeDerivative(servers.*.nuxeo.nuxeo.repositories.*.documents.update.count)%2C1)%2C%22updated%22)&target=alias(scaleToSeconds(nonNegativeDerivative(servers.*.nuxeo.nuxeo.repositories.*.documents.delete.count)%2C1)%2C%22deleted%22)&title=nx%2FDocuments&areaMode=stacked&vtitle=per%20second
-
    -   - alias(scaleToSeconds(nonNegativeDerivative(servers.*.nuxeo.nuxeo.repositories.*.queries.count),1),"query")
        - alias(scaleToSeconds(nonNegativeDerivative(servers.*.nuxeo.nuxeo.repositories.*.saves.count),1),"save")
        - alias(scaleToSeconds(nonNegativeDerivative(servers.*.nuxeo.nuxeo.repositories.*.aclr-updates.count),1),"aclrUpdate")
    -   target:
        - alias(scaleToSeconds(nonNegativeDerivative(servers.*.nuxeo.nuxeo.repositories.*.queries.count),1),"query")
        - alias(scaleToSeconds(nonNegativeDerivative(servers.*.nuxeo.nuxeo.repositories.*.saves.count),1),"save")
        - alias(scaleToSeconds(nonNegativeDerivative(servers.*.nuxeo.nuxeo.repositories.*.aclr-updates.count),1),"aclrUpdate")
        title: nx/SessionImpl
        vtitle: per second
    - /render?from=-2hours&until=now&width=400&height=250&vtitle=per%20second&title=nx%2FSessionImpl&target=alias(scaleToSeconds(nonNegativeDerivative(servers.*.nuxeo.nuxeo.repositories.*.queries.count)%2C1)%2C%22query%22)&target=alias(scaleToSeconds(nonNegativeDerivative(servers.*.nuxeo.nuxeo.repositories.*.saves.count)%2C1)%2C%22save%22)&target=alias(scaleToSeconds(nonNegativeDerivative(servers.*.nuxeo.nuxeo.repositories.*.aclr-updates.count)%2C1)%2C%22aclrUpdate%22)
-
    -   - alias(scaleToSeconds(nonNegativeDerivative(servers.*.nuxeo.nuxeo.elasticsearch.service.search.count),1),"search")
        - alias(servers.*.nuxeo.nuxeo.elasticsearch.service.search.m1_rate,"1minRate")
        - alias(secondYAxis(servers.*.nuxeo.nuxeo.elasticsearch.service.search.mean),"mean")
        - alias(secondYAxis(servers.*.nuxeo.nuxeo.elasticsearch.service.search.p95),"95perc")
    -   colorList: blue,darkblue,orange,red
        target:
        - alias(scaleToSeconds(nonNegativeDerivative(servers.*.nuxeo.nuxeo.elasticsearch.service.search.count),1),"search")
        - alias(servers.*.nuxeo.nuxeo.elasticsearch.service.search.m1_rate,"1minRate")
        - alias(secondYAxis(servers.*.nuxeo.nuxeo.elasticsearch.service.search.mean),"mean")
        - alias(secondYAxis(servers.*.nuxeo.nuxeo.elasticsearch.service.search.p95),"95perc")
        title: nx/Elasticsearch search
        vtitle: per second
    - /render?from=-2hours&until=now&width=400&height=250&target=alias(scaleToSeconds(nonNegativeDerivative(servers.*.nuxeo.nuxeo.elasticsearch.service.search.count)%2C1)%2C%22search%22)&target=alias(servers.*.nuxeo.nuxeo.elasticsearch.service.search.m1_rate%2C%221minRate%22)&target=alias(secondYAxis(servers.*.nuxeo.nuxeo.elasticsearch.service.search.mean)%2C%22mean%22)&target=alias(secondYAxis(servers.*.nuxeo.nuxeo.elasticsearch.service.search.p95)%2C%2295perc%22)&title=nx%2FElasticsearch%20search&vtitle=per%20second&colorList=blue%2Cdarkblue%2Corange%2Cred
-
    -   - alias(scaleToSeconds(nonNegativeDerivative(servers.*.nuxeo.nuxeo.elasticsearch.service.index.count),1),"index")
        - alias(servers.*.nuxeo.nuxeo.elasticsearch.service.index.m1_rate,"1minRate")
        - alias(secondYAxis(servers.*.nuxeo.nuxeo.elasticsearch.service.index.mean),"mean")
        - alias(secondYAxis(servers.*.nuxeo.nuxeo.elasticsearch.service.index.p95),"95perc")
    -   colorList: blue,darkblue,orange,red
        target:
        - alias(scaleToSeconds(nonNegativeDerivative(servers.*.nuxeo.nuxeo.elasticsearch.service.index.count),1),"index")
        - alias(servers.*.nuxeo.nuxeo.elasticsearch.service.index.m1_rate,"1minRate")
        - alias(secondYAxis(servers.*.nuxeo.nuxeo.elasticsearch.service.index.mean),"mean")
        - alias(secondYAxis(servers.*.nuxeo.nuxeo.elasticsearch.service.index.p95),"95perc")
        title: nx/Elasticsearch index
        vtitle: per second
    - /render?from=-2hours&until=now&width=400&height=250&target=alias(scaleToSeconds(nonNegativeDerivative(servers.*.nuxeo.nuxeo.elasticsearch.service.index.count)%2C1)%2C%22index%22)&target=alias(servers.*.nuxeo.nuxeo.elasticsearch.service.index.m1_rate%2C%221minRate%22)&target=alias(secondYAxis(servers.*.nuxeo.nuxeo.elasticsearch.service.index.mean)%2C%22mean%22)&target=alias(secondYAxis(servers.*.nuxeo.nuxeo.elasticsearch.service.index.p95)%2C%2295perc%22)&title=nx%2FElasticsearch%20index&vtitle=per%20second&colorList=blue%2Cdarkblue%2Corange%2Cred
-
    -   - alias(scaleToSeconds(nonNegativeDerivative(servers.*.nuxeo.nuxeo.elasticsearch.service.bulkIndex.count),1),"bulkIndex")
        - alias(servers.*.nuxeo.nuxeo.elasticsearch.service.bulkIndex.m1_rate,"1minRate")
        - alias(secondYAxis(servers.*.nuxeo.nuxeo.elasticsearch.service.bulkIndex.mean),"mean")
        - alias(secondYAxis(servers.*.nuxeo.nuxeo.elasticsearch.service.bulkIndex.p95),"95perc")
    -   colorList: blue,darkblue,orange,red
        target:
        - alias(scaleToSeconds(nonNegativeDerivative(servers.*.nuxeo.nuxeo.elasticsearch.service.bulkIndex.count),1),"bulkIndex")
        - alias(servers.*.nuxeo.nuxeo.elasticsearch.service.bulkIndex.m1_rate,"1minRate")
        - alias(secondYAxis(servers.*.nuxeo.nuxeo.elasticsearch.service.bulkIndex.mean),"mean")
        - alias(secondYAxis(servers.*.nuxeo.nuxeo.elasticsearch.service.bulkIndex.p95),"95perc")
        title: nx/Elasticsearch bulk index
        vtitle: per second
    - /render?from=-2hours&until=now&width=400&height=250&target=alias(scaleToSeconds(nonNegativeDerivative(servers.*.nuxeo.nuxeo.elasticsearch.service.bulkIndex.count)%2C1)%2C%22bulkIndex%22)&target=alias(servers.*.nuxeo.nuxeo.elasticsearch.service.bulkIndex.m1_rate%2C%221minRate%22)&target=alias(secondYAxis(servers.*.nuxeo.nuxeo.elasticsearch.service.bulkIndex.mean)%2C%22mean%22)&target=alias(secondYAxis(servers.*.nuxeo.nuxeo.elasticsearch.service.bulkIndex.p95)%2C%2295perc%22)&title=nx%2FElasticsearch%20bulk%20index&vtitle=per%20second&colorList=blue%2Cdarkblue%2Corange%2Cred
-
    -   - alias(scaleToSeconds(nonNegativeDerivative(servers.*.nuxeo.nuxeo.elasticsearch.service.delete.count),1),"delete")
        - alias(servers.*.nuxeo.nuxeo.elasticsearch.service.delete.m1_rate,"1minRate")
        - alias(secondYAxis(servers.*.nuxeo.nuxeo.elasticsearch.service.delete.mean),"mean")
        - alias(secondYAxis(servers.*.nuxeo.nuxeo.elasticsearch.service.delete.p95),"95perc")
    -   colorList: blue,darkblue,orange,red
        target:
        - alias(scaleToSeconds(nonNegativeDerivative(servers.*.nuxeo.nuxeo.elasticsearch.service.delete.count),1),"delete")
        - alias(servers.*.nuxeo.nuxeo.elasticsearch.service.delete.m1_rate,"1minRate")
        - alias(secondYAxis(servers.*.nuxeo.nuxeo.elasticsearch.service.delete.mean),"mean")
        - alias(secondYAxis(servers.*.nuxeo.nuxeo.elasticsearch.service.delete.p95),"95perc")
        title: nx/Elasticsearch delete
        vtitle: per second
    - /render?from=-2hours&until=now&width=400&height=250&target=alias(scaleToSeconds(nonNegativeDerivative(servers.*.nuxeo.nuxeo.elasticsearch.service.delete.count)%2C1)%2C%22delete%22)&target=alias(servers.*.nuxeo.nuxeo.elasticsearch.service.delete.m1_rate%2C%221minRate%22)&target=alias(secondYAxis(servers.*.nuxeo.nuxeo.elasticsearch.service.delete.mean)%2C%22mean%22)&target=alias(secondYAxis(servers.*.nuxeo.nuxeo.elasticsearch.service.delete.p95)%2C%2295perc%22)&title=nx%2FElasticsearch%20delete&vtitle=per%20second&colorList=blue%2Cdarkblue%2Corange%2Cred
-
    -   - alias(scaleToSeconds(nonNegativeDerivative(servers.*.nuxeo.nuxeo.elasticsearch.service.fetch.count),1),"fetch")
        - alias(servers.*.nuxeo.nuxeo.elasticsearch.service.fetch.m1_rate,"1minRate")
        - alias(secondYAxis(servers.*.nuxeo.nuxeo.elasticsearch.service.fetch.mean),"mean")
        - alias(secondYAxis(servers.*.nuxeo.nuxeo.elasticsearch.service.fetch.p95),"95perc")
    -   colorList: blue,darkblue,orange,red
        target:
        - alias(scaleToSeconds(nonNegativeDerivative(servers.*.nuxeo.nuxeo.elasticsearch.service.fetch.count),1),"fetch")
        - alias(servers.*.nuxeo.nuxeo.elasticsearch.service.fetch.m1_rate,"1minRate")
        - alias(secondYAxis(servers.*.nuxeo.nuxeo.elasticsearch.service.fetch.mean),"mean")
        - alias(secondYAxis(servers.*.nuxeo.nuxeo.elasticsearch.service.fetch.p95),"95perc")
        title: nx/Elasticsearch fetch docs
        vtitle: per second
    - /render?from=-2hours&until=now&width=400&height=250&target=alias(scaleToSeconds(nonNegativeDerivative(servers.*.nuxeo.nuxeo.elasticsearch.service.fetch.count)%2C1)%2C%22fetch%22)&target=alias(servers.*.nuxeo.nuxeo.elasticsearch.service.fetch.m1_rate%2C%221minRate%22)&target=alias(secondYAxis(servers.*.nuxeo.nuxeo.elasticsearch.service.fetch.mean)%2C%22mean%22)&target=alias(secondYAxis(servers.*.nuxeo.nuxeo.elasticsearch.service.fetch.p95)%2C%2295perc%22)&title=nx%2FElasticsearch%20fetch%20docs&vtitle=per%20second&colorList=blue%2Cdarkblue%2Corange%2Cred
-
    -   - alias(asPercent(servers.*.nuxeo.nuxeo.repositories.default.caches.hit.count,servers.*.nuxeo.nuxeo.repositories.default.caches.get.count),"Total
            hit-ratio")
        - alias(asPercent(servers.*.nuxeo.nuxeo.repositories.default.caches.soft-ref.hits.count,servers.*.nuxeo.nuxeo.repositories.default.caches.soft-ref.get.count),"Soft
            ref hit-ratio")
        - alias(asPercent(servers.*.nuxeo.nuxeo.repositories.default.caches.selections.hit.count,servers.*.nuxeo.nuxeo.repositories.default.caches.selections.get.count),"Selection
            hit-ratio")
        - alias(secondYAxis(servers.*.nuxeo.nuxeo.repositories.default.caches.hit.count),"Total
            hit-count")
        - alias(secondYAxis(servers.*.nuxeo.nuxeo.repositories.default.caches.soft-ref.hits.count),"Soft
            ref hit-count")
        - alias(secondYAxis(servers.*.nuxeo.nuxeo.repositories.default.caches.selections.hit.count),"Selection
            hit-count")
    -   target:
        - alias(asPercent(servers.*.nuxeo.nuxeo.repositories.default.caches.hit.count,servers.*.nuxeo.nuxeo.repositories.default.caches.get.count),"Total
            hit-ratio")
        - alias(asPercent(servers.*.nuxeo.nuxeo.repositories.default.caches.soft-ref.hits.count,servers.*.nuxeo.nuxeo.repositories.default.caches.soft-ref.get.count),"Soft
            ref hit-ratio")
        - alias(asPercent(servers.*.nuxeo.nuxeo.repositories.default.caches.selections.hit.count,servers.*.nuxeo.nuxeo.repositories.default.caches.selections.get.count),"Selection
            hit-ratio")
        - alias(secondYAxis(servers.*.nuxeo.nuxeo.repositories.default.caches.hit.count),"Total
            hit-count")
        - alias(secondYAxis(servers.*.nuxeo.nuxeo.repositories.default.caches.soft-ref.hits.count),"Soft
            ref hit-count")
        - alias(secondYAxis(servers.*.nuxeo.nuxeo.repositories.default.caches.selections.hit.count),"Selection
            hit-count")
        title: nx/VCS cache
    - /render?from=-2hours&until=now&width=400&height=250&title=nx%2FVCS%20cache&target=alias(asPercent(servers.*.nuxeo.nuxeo.repositories.default.caches.hit.count%2Cservers.*.nuxeo.nuxeo.repositories.default.caches.get.count)%2C%22Total%20hit-ratio%22)&target=alias(asPercent(servers.*.nuxeo.nuxeo.repositories.default.caches.soft-ref.hits.count%2Cservers.*.nuxeo.nuxeo.repositories.default.caches.soft-ref.get.count)%2C%22Soft%20ref%20hit-ratio%22)&target=alias(asPercent(servers.*.nuxeo.nuxeo.repositories.default.caches.selections.hit.count%2Cservers.*.nuxeo.nuxeo.repositories.default.caches.selections.get.count)%2C%22Selection%20hit-ratio%22)&target=alias(secondYAxis(servers.*.nuxeo.nuxeo.repositories.default.caches.hit.count)%2C%22Total%20hit-count%22)&target=alias(secondYAxis(servers.*.nuxeo.nuxeo.repositories.default.caches.soft-ref.hits.count)%2C%22Soft%20ref%20hit-count%22)&target=alias(secondYAxis(servers.*.nuxeo.nuxeo.repositories.default.caches.selections.hit.count)%2C%22Selection%20hit-count%22)
-
    -   - aliasByNode(scaleToSeconds(nonNegativeDerivative(servers.*.nuxeo.nuxeo.works.*.scheduled.count.count),1),5,6)
        - aliasByNode(scaleToSeconds(nonNegativeDerivative(servers.*.nuxeo.nuxeo.works.*.completed.count),1),5,6)
    -   target:
        - aliasByNode(scaleToSeconds(nonNegativeDerivative(servers.*.nuxeo.nuxeo.works.*.scheduled.count.count),1),5,6)
        - aliasByNode(scaleToSeconds(nonNegativeDerivative(servers.*.nuxeo.nuxeo.works.*.completed.count),1),5,6)
        title: nx/Workers throughtput
        vtitle: per second
    - /render?from=-2hours&until=now&width=400&height=250&vtitle=per%20second&title=nx%2FWorkers%20throughtput&target=aliasByNode(scaleToSeconds(nonNegativeDerivative(servers.*.nuxeo.nuxeo.works.*.scheduled.count.count)%2C1)%2C5%2C6)&target=aliasByNode(scaleToSeconds(nonNegativeDerivative(servers.*.nuxeo.nuxeo.works.*.completed.count)%2C1)%2C5%2C6)
-
    -   - aliasByNode(servers.*.nuxeo.nuxeo.works.*.scheduled.max.count,5,6)
        - aliasByNode(secondYAxis(servers.*.nuxeo.nuxeo.works.*.completed.count),5,6)
    -   target:
        - aliasByNode(servers.*.nuxeo.nuxeo.works.*.scheduled.max.count,5,6)
        - aliasByNode(secondYAxis(servers.*.nuxeo.nuxeo.works.*.completed.count),5,6)
        title: nx/Workers count
        vtitle: count
    - /render?from=-2hours&until=now&width=400&height=250&vtitle=count&title=nx%2FWorkers%20count&target=aliasByNode(servers.*.nuxeo.nuxeo.works.*.scheduled.max.count%2C5%2C6)&target=aliasByNode(secondYAxis(servers.*.nuxeo.nuxeo.works.*.completed.count)%2C5%2C6)
