[
  {
    "colorList": "darkgray,red,blue,green",
    "vtitle": "load",
    "title": "sys/Load1min Nuxeo nodes",
    "target": [
      "alias(secondYAxis(sumSeries(servers.nuxeo*.loadavg.processes_running)),\"process running\")",
      "aliasByNode(servers.nuxeo*.loadavg.01,1)"
    ],
    "lineMode": "connected",
    "vtitleRight": "process"
  },
  {
    "colorList": "darkgray,red,orange,yellow",
    "vtitle": "load",
    "title": "sys/Load1min DB",
    "target": [
      "alias(secondYAxis(servers.mypgsql.loadavg.processes_running),\"process running\")",
      "alias(servers.mypgsql.loadavg.01,\"1min\")"
    ],
    "lineMode": "connected",
    "vtitleRight": "process"
  },
  {
    "colorList": "darkgray,red,blue,green",
    "vtitle": "load",
    "title": "sys/Load1min Elasticsearch",
    "target": [
      "alias(secondYAxis(sumSeries(servers.es*.loadavg.processes_running)),\"process running\")",
      "aliasByNode(servers.es*.loadavg.01,1)"
    ],
    "lineMode": "connected",
    "vtitleRight": "process"
  },
  {
    "title": "sys/CPU Idle",
    "target": [
      "aliasByNode(servers.*.cpu.total.idle,1)"
    ],
    "lineMode": "connected",
    "vtitle": "% Idle"
  },
  {
    "title": "sys/CPU User",
    "target": [
      "aliasByNode(servers.*.cpu.total.user,1)"
    ],
    "lineMode": "connected",
    "vtitle": "% User"
  },
  {
    "title": "sys/CPU IoWait",
    "target": [
      "aliasByNode(servers.*.cpu.total.iowait,1)"
    ],
    "lineMode": "connected",
    "vtitle": "% iowait"
  },
  {
    "title": "sys/CPU System",
    "target": [
      "aliasByNode(servers.*.cpu.total.system,1)"
    ],
    "lineMode": "connected",
    "vtitle": "% System"
  },
  {
    "title": "sys/Disk Usage xvdf",
    "target": [
      "aliasByNode(servers.*.iostat.xvdf.util_percentage,1)"
    ],
    "lineMode": "connected",
    "vtitle": "% usage"
  },
  {
    "title": "sys/Disk Usage xvda",
    "target": [
      "aliasByNode(servers.*.iostat.xvda.util_percentage,1)"
    ],
    "lineMode": "connected",
    "vtitle": "% usage"
  },
  {
    "colorList": "red,orange,blue,darkblue,green",
    "vtitle": "%",
    "title": "sys/Memory DB",
    "target": [
      "alias(secondYAxis(servers.mypgsql.memory.SwapCached),\"swap\")",
      "alias(secondYAxis(servers.mypgsql.memory.Dirty),\"dirty\")",
      "alias(asPercent(servers.mypgsql.memory.Buffers,servers.mypgsql.memory.MemTotal),\"buffers\")",
      "alias(asPercent(servers.mypgsql.memory.Cached,servers.mypgsql.memory.MemTotal),\"cached\")",
      "alias(asPercent(servers.mypgsql.memory.MemFree,servers.mypgsql.memory.MemTotal),\"free\")"
    ],
    "lineMode": "connected",
    "vtitleRight": "Bytes"
  },
  {
    "vtitle": "%",
    "yMinLeft": "0",
    "title": "es/CPU and size",
    "yMaxLeft": "100",
    "target": [
      "aliasByNode(servers.*.elasticsearch.process.cpu.percent,1)",
      "aliasByNode(secondYAxis(servers.*.elasticsearch.indices._all.datastore.size),1)"
    ],
    "vtitleRight": "Bytes",
    "lineMode": "connected"
  },
  {
    "title": "es/docs",
    "target": [
      "alias(maxSeries(servers.*.elasticsearch.indices._all.docs.count),\"total\")",
      "alias(maxSeries(servers.*.elasticsearch.indices.nuxeo.docs.count),\"docs\")",
      "alias(maxSeries(servers.*.elasticsearch.indices.nuxeo-audit.docs.count),\"audit\")",
      "alias(maxSeries(servers.*.elasticsearch.indices._all.docs.count),\"total\")",
      "alias(maxSeries(servers.*.elasticsearch.indices._all.docs.deleted),\"deleted\")"
    ],
    "vtitle": "docs",
    "lineMode": "connected"
  },
  {
    "title": "db/Postgres",
    "yMinRight": "0",
    "target": [
      "alias(scaleToSeconds(nonNegativeDerivative(servers.*.postgres.database.*.tup_deleted),1),\"tup_deleted\")",
      "alias(scaleToSeconds(nonNegativeDerivative(servers.*.postgres.database.*.tup_inserted),1),\"tup_inserted\")",
      "alias(scaleToSeconds(nonNegativeDerivative(servers.*.postgres.database.*.tup_updated),1),\"tup_updated\")",
      "alias(scaleToSeconds(nonNegativeDerivative(servers.*.postgres.database.*.xact_commit),1),\"xact_commit\")",
      "alias(secondYAxis(servers.*.postgres.database.*.connections),\"connections\")"
    ],
    "colorList": "red,orange,yellow,blue,green",
    "lineMode": "connected"
  },
  {
    "title": "db/MongoDB throughput",
    "yMinRight": "0",
    "target": [
      "aliasByNode(servers.*.mongo.opcounters_per_sec.*,4)",
      "alias(secondYAxis(servers.*.mongo.connections.current),\"connections\")"
    ],
    "lineMode": "connected",
    "vtitle": "op/s"
  },
  {
    "title": "db/MongoDB size",
    "yMinRight": "0",
    "target": [
      "alias(servers.*.mongo.databases.bench.dataSize,\"data\")",
      "alias(servers.*.mongo.databases.bench.indexSize,\"index\")",
      "alias(servers.*.mongo.databases.bench.storageSize,\"storage\")",
      "alias(secondYAxis(servers.*.mongo.connections.current),\"connections\")",
      "alias(secondYAxis(servers.*.mongo.databases.bench.indexes),\"nb indexes\")"
    ],
    "lineMode": "connected",
    "vtitle": "bytes"
  },
  {
    "title": "db/MongoDB more size",
    "yMinRight": "0",
    "target": [
      "alias(servers.*.mongo.databases.bench.objects,\"docs\")",
      "alias(secondYAxis(servers.*.mongo.databases.bench.avgObjSize),\"avg doc size\")"
    ],
    "lineMode": "connected"
  },
  {
    "title": "db/MongoDB memory",
    "yMinRight": "0",
    "target": [
      "alias(servers.*.mongo.mem.resident,\"resident size\")",
      "alias(secondYAxis(servers.*.mongo.network_per_sec.numRequests),\"network req/s\")"
    ],
    "lineMode": "connected"
  },
  {
    "title": "jvm/Threads all nodes",
    "target": [
      "alias(secondYAxis(sumSeries(servers.*.nuxeo.jvm.files)),\"fd_usage\")",
      "alias(sumSeries(servers.*.nuxeo.jvm.threads.count),\"thread_count\")",
      "alias(sumSeries(servers.*.nuxeo.jvm.threads.daemon.count),\"daemond\")"
    ],
    "colorList": "darkgray,blue,green"
  },
  {
    "title": "jvm/Thread state all nodes",
    "target": [
      "alias(sumSeries(servers.*.nuxeo.jvm.threads.runnable.count),\"runnable\")",
      "alias(sumSeries(servers.*.nuxeo.jvm.threads.new.count),\"new\")",
      "alias(sumSeries(servers.*.nuxeo.jvm.threads.blocked.count),\"blocked\")",
      "alias(sumSeries(servers.*.nuxeo.jvm.threads.waiting.count),\"waiting\")",
      "alias(sumSeries(servers.*.nuxeo.jvm.threads.timed_waiting.count),\"timed_waiting\")",
      "alias(sumSeries(servers.*.nuxeo.jvm.threads.terminated.count),\"terminated\")"
    ],
    "colorList": "green,blue,red,orange,yellow,purple",
    "areaMode": "stacked"
  },
  {
    "title": "jvm/Heap used",
    "target": [
      "aliasByNode(servers.*.nuxeo.jvm.memory.heap.used,1,6)",
      "aliasByNode(servers.*.nuxeo.jvm.memory.heap.max,1,6)"
    ],
    "vtitle": "size"
  },
  {
    "title": "jvm/GC",
    "target": [
      "alias(asPercent(scaleToSeconds(nonNegativeDerivative(sumSeries(servers.*.nuxeo.jvm.garbage.PS-Scavenge.time)),1),2000),\"minor\")",
      "alias(asPercent(scaleToSeconds(nonNegativeDerivative(sumSeries(servers.*.nuxeo.jvm.garbage.PS-MarkSweep.time)),1),2000),\"major\")"
    ],
    "lineMode": "staircase",
    "vtitle": "%",
    "areaMode": "first",
    "colorList": "orange,red"
  },
  {
    "title": "tcat/Processing time and errors all nodes",
    "target": [
      "alias(sumSeries(servers.*.nuxeo.tomcat.processingTime),\"processingTime\")",
      "alias(secondYAxis(sumSeries(servers.*.nuxeo.tomcat.errorCount)),\"requests in error\")"
    ],
    "colorList": "green,red,yellow"
  },
  {
    "title": "tcat/Throughtput Threads and sessions",
    "target": [
      "alias(sumSeries(servers.*.nuxeo.tomcat.currentThreadBusy),\"threads busy\")",
      "alias(sumSeries(servers.*.nuxeo.tomcat.currentThreadCount),\"threads\")",
      "alias(scaleToSeconds(nonNegativeDerivative(sumSeries(servers.*.nuxeo.tomcat.requestCount)),1),\"requests/s\")",
      "alias(secondYAxis(sumSeries(servers.*.nuxeo.tomcat.activeSessions)),\"activeSessions\")"
    ]
  },
  {
    "title": "nx/Repositories JDBC connections pool all nodes",
    "target": [
      "alias(sumSeries(servers.*.nuxeo.nuxeo.repositories.jdbc.*.connections.count),\"total connection\")",
      "alias(diffSeries(sumSeries(servers.*.nuxeo.nuxeo.repositories.jdbc.*.connections.count),sumSeries(servers.*.nuxeo.nuxeo.repositories.jdbc.*.connections.idle)),\"active\")"
    ]
  },
  {
    "title": "nx/Repositories sessions",
    "target": [
      "alias(sumSeries(servers.*.nuxeo.nuxeo.repositories.sessions),\"sessions\")",
      "alias(sumSeries(servers.*.nuxeo.nuxeo.repositories.repository.*.connections.count),\"total connections\")",
      "alias(diffSeries(sumSeries(servers.*.nuxeo.nuxeo.repositories.repository.*.connections.count),sumSeries(servers.*.nuxeo.nuxeo.repositories.repository.*.connections.idle)),\"active\")"
    ]
  },
  {
    "title": "nx/Directories max sessions for all directories and nodes",
    "target": [
      "alias(sumSeries(servers.*.nuxeo.nuxeo.directories.*.sessions.max.count),\"count\")"
    ]
  },
  {
    "title": "nx/Directories sessions and cache size",
    "target": [
      "alias(sumSeries(servers.*.nuxeo.nuxeo.directories.*.sessions.active.count),\"total active sessions\")",
      "alias(secondYAxis(sumSeries(servers.*.nuxeo.nuxeo.directories.*.cache.size.count)),\"cache size\"),",
      "alias(secondYAxis(sumSeries(servers.*.nuxeo.nuxeo.directories.*.cache.max.count)),\"max cache size\")"
    ]
  },
  {
    "title": "nx/Requests all nodes",
    "target": [
      "alias(sumSeries(servers.*.nuxeo.nuxeo.web.authentication.requests.count.m1_rate),\"1minRate\")",
      "alias(secondYAxis(averageSeries(servers.*.nuxeo.nuxeo.web.authentication.requests.count.mean)),\"mean\")",
      "alias(secondYAxis(maxSeries(servers.*.nuxeo.nuxeo.web.authentication.requests.count.p95)),\"95perc\")"
    ],
    "colorList": "blue,orange,red",
    "vtitle": "Req/s"
  },
  {
    "title": "nx/Requests and logged all nodes",
    "target": [
      "alias(sumSeries(servers.*.nuxeo.nuxeo.web.authentication.logged-users.count),\"logged\")",
      "alias(secondYAxis(sumSeries(servers.*.nuxeo.nuxeo.web.authentication.requests.concurrent.count.count)),\"concurrent request\")",
      "alias(secondYAxis(sumSeries(servers.*.nuxeo.nuxeo.web.authentication.requests.concurrent.max.count)),\"max concurrent\")"
    ]
  },
  {
    "title": "nx/Transactions",
    "target": [
      "alias(sumSeries(servers.*.nuxeo.nuxeo.transactions.duration.m1_rate),\"1minRate\")",
      "alias(secondYAxis(averageSeries(servers.*.nuxeo.nuxeo.transactions.duration.mean)),\"mean\")",
      "alias(secondYAxis(maxSeries(servers.*.nuxeo.nuxeo.transactions.duration.p95)),\"95perc\")"
    ],
    "colorList": "blue,orange,red",
    "vtitle": "Tx/s"
  },
  {
    "title": "nx/Transactions rollback all nodes",
    "target": [
      "alias(drawAsInfinite(derivative(sumSeries(servers.*.nuxeo.nuxeo.transactions.rollbacks.count))),\"rollback\")",
      "alias(sumSeries(servers.*.nuxeo.nuxeo.transactions.concurrents.count.count),\"concurrent tx\")",
      "alias(sumSeries(servers.*.nuxeo.nuxeo.transactions.concurrents.max.count),\"max concurrent tx\")"
    ],
    "colorList": "red,blue,orange"
  },
  {
    "title": "nx/Up and log",
    "target": [
      "alias(scaleToSeconds(nonNegativeDerivative(servers.*.nuxeo.org.apache.log4j.Appender.warn.count),1),\"warnings\")",
      "alias(scaleToSeconds(nonNegativeDerivative(servers.*.nuxeo.org.apache.log4j.Appender.error.count),1),\"errors\")",
      "alias(drawAsInfinite(absolute(derivative(transformNull(servers.*.nuxeo.nuxeo.instance-up.count,0)))),\"start or stop\")"
    ],
    "colorList": "orange,red,green",
    "vtitle": "log per second"
  },
  {
    "title": "nx/Documents all nodes",
    "target": [
      "alias(scaleToSeconds(nonNegativeDerivative(sumSeries(servers.*.nuxeo.nuxeo.repositories.*.documents.create.count)),1),\"created\")",
      "alias(scaleToSeconds(nonNegativeDerivative(sumSeries(servers.*.nuxeo.nuxeo.repositories.*.documents.update.count)),1),\"updated\")",
      "alias(scaleToSeconds(nonNegativeDerivative(sumSeries(servers.*.nuxeo.nuxeo.repositories.*.documents.delete.count)),1),\"deleted\")"
    ],
    "vtitle": "per second",
    "areaMode": "stacked"
  },
  {
    "title": "nx/SessionImpl all nodes",
    "target": [
      "alias(scaleToSeconds(nonNegativeDerivative(sumSeries(servers.*.nuxeo.nuxeo.repositories.*.queries.count.count)),1),\"query\")",
      "alias(scaleToSeconds(nonNegativeDerivative(sumSeries(servers.*.nuxeo.nuxeo.repositories.*.saves.count)),1),\"save\")"
    ],
    "vtitle": "per second"
  },
  {
    "title": "nx/Elasticsearch search all nodes",
    "target": [
      "alias(scaleToSeconds(nonNegativeDerivative(sumSeries(servers.*.nuxeo.nuxeo.elasticsearch.service.search.count)),1),\"search\")",
      "alias(sumSeries(servers.*.nuxeo.nuxeo.elasticsearch.service.search.m1_rate),\"1minRate\")",
      "alias(secondYAxis(averageSeries(servers.*.nuxeo.nuxeo.elasticsearch.service.search.mean)),\"mean\")",
      "alias(secondYAxis(maxSeries(servers.*.nuxeo.nuxeo.elasticsearch.service.search.p95)),\"95perc\")"
    ],
    "colorList": "blue,darkblue,orange,red",
    "vtitle": "per second"
  },
  {
    "title": "nx/Elasticsearch index",
    "target": [
      "alias(scaleToSeconds(nonNegativeDerivative(sumSeries(servers.*.nuxeo.nuxeo.elasticsearch.service.index.count)),1),\"index\")",
      "alias(sumSeries(servers.*.nuxeo.nuxeo.elasticsearch.service.index.m1_rate),\"1minRate\")",
      "alias(secondYAxis(averageSeries(servers.*.nuxeo.nuxeo.elasticsearch.service.index.mean)),\"mean\")",
      "alias(secondYAxis(maxSeries(servers.*.nuxeo.nuxeo.elasticsearch.service.index.p95)),\"95perc\")"
    ],
    "colorList": "blue,darkblue,orange,red",
    "vtitle": "per second"
  },
  {
    "title": "nx/Elasticsearch bulk index",
    "target": [
      "alias(scaleToSeconds(nonNegativeDerivative(sumSeries(servers.*.nuxeo.nuxeo.elasticsearch.service.bulkIndex.count)),1),\"bulkIndex\")",
      "alias(sumSeries(servers.*.nuxeo.nuxeo.elasticsearch.service.bulkIndex.m1_rate),\"1minRate\")",
      "alias(secondYAxis(averageSeries(servers.*.nuxeo.nuxeo.elasticsearch.service.bulkIndex.mean)),\"mean\")",
      "alias(secondYAxis(maxSeries(servers.*.nuxeo.nuxeo.elasticsearch.service.bulkIndex.p95)),\"95perc\")"
    ],
    "colorList": "blue,darkblue,orange,red",
    "vtitle": "per second"
  },
  {
    "title": "nx/Elasticsearch delete",
    "target": [
      "alias(scaleToSeconds(nonNegativeDerivative(sumSeries(servers.*.nuxeo.nuxeo.elasticsearch.service.delete.count)),1),\"delete\")",
      "alias(sumSeries(servers.*.nuxeo.nuxeo.elasticsearch.service.delete.m1_rate),\"1minRate\")",
      "alias(secondYAxis(averageSeries(servers.*.nuxeo.nuxeo.elasticsearch.service.delete.mean)),\"mean\")",
      "alias(secondYAxis(maxSeries(servers.*.nuxeo.nuxeo.elasticsearch.service.delete.p95)),\"95perc\")"
    ],
    "colorList": "blue,darkblue,orange,red",
    "vtitle": "per second"
  },
  {
    "title": "nx/Elasticsearch fetch docs",
    "target": [
      "alias(scaleToSeconds(nonNegativeDerivative(sumSeries(servers.*.nuxeo.nuxeo.elasticsearch.service.fetch.count)),1),\"fetch\")",
      "alias(sumSeries(servers.*.nuxeo.nuxeo.elasticsearch.service.fetch.m1_rate),\"1minRate\")",
      "alias(secondYAxis(averageSeries(servers.*.nuxeo.nuxeo.elasticsearch.service.fetch.mean)),\"mean\")",
      "alias(secondYAxis(maxSeries(servers.*.nuxeo.nuxeo.elasticsearch.service.fetch.p95)),\"95perc\")"
    ],
    "colorList": "blue,darkblue,orange,red",
    "vtitle": "per second"
  },
  {
    "title": "nx/VCS cache",
    "target": [
      "alias(asPercent(sumSeries(servers.*.nuxeo.nuxeo.repositories.default.caches.hit.count),sumSeries(servers.*.nuxeo.nuxeo.repositories.default.caches.count.count)),\"Total hit-ratio\")",
      "alias(asPercent(sumSeries(servers.*.nuxeo.nuxeo.repositories.default.caches.soft-ref.hits.count),sumSeries(servers.*.nuxeo.nuxeo.repositories.default.caches.soft-ref.get.count)),\"Soft ref hit-ratio\")",
      "alias(asPercent(sumSeries(servers.*.nuxeo.nuxeo.repositories.default.caches.selections.hit.count),sumSeries(servers.*.nuxeo.nuxeo.repositories.default.caches.selections.get.count)),\"Selection hit-ratio\")",
      "alias(secondYAxis(sumSeries(servers.*.nuxeo.nuxeo.repositories.default.caches.hit.count)),\"Total hit-count\")",
      "alias(secondYAxis(sumSeries(servers.*.nuxeo.nuxeo.repositories.default.caches.soft-ref.hits.count)),\"Soft ref hit-count\")",
      "alias(secondYAxis(sumSeries(servers.*.nuxeo.nuxeo.repositories.default.caches.selections.hit.count)),\"Selection hit-count\")"
    ]
  },
  {
    "title": "nx/Workers count total",
    "target": [
      "alias(sumSeries(servers.*.nuxeo.nuxeo.works.*.scheduled.count.count),\"scheduled\")",
      "alias(sumSeries(servers.*.nuxeo.nuxeo.works.*.completed.count),\"completed\")"
    ],
    "vtitle": "count"
  },
  {
    "title": "nx/Workers scheduled not completed",
    "target": [
      "alias(diffSeries(sumSeries(servers.*.nuxeo.nuxeo.works.*.scheduled.count.count), sumSeries(servers.*.nuxeo.nuxeo.works.*.completed.count)),\"to process\")"
    ]
  },
  {
    "title": "nx/Workers deviant scheduled throughtput",
    "target": [
      "mostDeviant(6,aliasByNode(scaleToSeconds(nonNegativeDerivative(servers.*.nuxeo.nuxeo.works.*.scheduled.count.count),1),1,5))"
    ],
    "vtitle": "per second"
  },
  {
    "title": "nx/Workers deviant completed throughtput",
    "target": [
      "mostDeviant(6,aliasByNode(scaleToSeconds(nonNegativeDerivative(servers.*.nuxeo.nuxeo.works.*.completed.count),1),1,5))"
    ],
    "vtitle": "per second"
  },
  {
    "title": "nx/Workers deviant completed count",
    "target": [
      "mostDeviant(6,aliasByNode(servers.*.nuxeo.nuxeo.works.*.completed.count,1,5))"
    ],
    "vtitle": "count"
  },
  {
    "title": "nx/Audit throughput",
    "target": [
            "aliasByNode(scaleToSeconds(nonNegativeDerivative(servers.*.nuxeo.nuxeo.audit.drained.count),1),1,5)",
            "aliasByNode(scaleToSeconds(nonNegativeDerivative(servers.*.nuxeo.nuxeo.audit.scheduled.count),1),1,5)",
            "alias(secondYAxis(diffSeries(sumSeries(servers.*.nuxeo.nuxeo.audit.queued.count), sumSeries(servers.*.nuxeo.nuxeo.audit.drained.count))),\"queue size\")"

    ],
    "vtitle": "count"
  }
]
